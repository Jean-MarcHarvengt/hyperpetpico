

!to "waves.prg"


*= $0401
        * = $0401
        !word bas_end
        !word $00
        !byte $9e
        !text "2048"
        !byte $00
bas_end !word $00

; Graphics
; tile/text map
REG_TEXTMAP_L1    = $8000
REG_TILEMAP_L1    = $8800
REG_TILEMAP_L0    = $9000

; sprite
REG_SPRITE_IND    = $9800
REG_SPRITE_XHI    = $9880
REG_SPRITE_XLO    = $9900
REG_SPRITE_Y      = $9980

; mode
REG_VIDEO_MODE    = $9b00
; 0-1: resolution (0=640x200,1=320x200,2=256x200)

; bg/text color
REG_BG_COL        = $9b01
; RGB332
REG_FG_COL        = $9b0d
; RGB332

; layers config
REG_LAYERS_CFG    = $9b02
; 0: L0 on/off
; 1: L1 on/off    (off if HIRES and bitmap in L0!)
; 2: L2 on/off
; 3: L2 inbetween
; 4: bitmap/tile in L0
; 5: petfont/tile in L1
; 6: enable scroll area in L0
; 7: enable scroll area in L1

; lines config
REG_LINES_CFG     = $9b03
; 0: single/perline background color
; 1: single/perline L0 xscroll
; 2: single/perline L1 xscroll
REG_TILES_CFG     = $9b0e
; 0: 0=8x8tile, 1=16x16tiles

; layer scroll
REG_XSCROLL_HI    = $9b04
; 3-0: L0 xscroll hi
; 7-4: L1 xscroll hi
REG_XSCROLL_L0    = $9b05
REG_XSCROLL_L1    = $9b06
REG_YSCROLL_L0    = $9b07
REG_YSCROLL_L1    = $9b08
; scroll area
REG_SC_START_L0   = $9b09
REG_SC_END_L0     = $9b0a
REG_SC_START_L1   = $9b0b
REG_SC_END_L1     = $9b0c
; 4-0

; data transfer
REG_TLOOKUP       = $9a00
REG_TDEPTH        = $9b10
; 1/2/4/8 items/bytes packet  (e.g. pixels)
; 0 = undefined
REG_TCOMMAND      = $9b11
; 1: transfer tiles data      (data=tilenr,w,h,packet pixels)
; 2: transfer sprites data    (data=spritenr,w,h,packet pixels)
; 3: transfer bitmap data     (data=xh,xl,y,wh,wl,h,w*h/packet pixels) 
; 4: transfer t/fmap col data (data=layer,col,row,size,size/packet tiles)
; 5: transfer t/fmap row data (data=layer,col,row,size,size/packet tiles)
REG_TPARAMS       = $9b12
REG_TDATA         = $9b13

; lines background color / scroll (200 values)
REG_LINES_BG_COL  = $9b38
; RGB332
REG_LINES_XSCR_HI = $9c00
; 7-4:  lines L1 xscroll hi, 3-0: L0 xscroll hi
REG_LINES_L0_XSCR = $9cc8
REG_LINES_L1_XSCR = $9d90

; Audio
; SID (see C64)
REG_SID_BASE      = $9f00


ROW_START = 0
ROW_END   = 12

*= $0800

; Initialize lines scroll area

        lda #ROW_START
        sta REG_SC_START_L1
        lda #ROW_END
        sta REG_SC_END_L1
        lda #$80+4+2+1
        sta REG_LAYERS_CFG
        lda #$04
        sta REG_LINES_CFG
      
        lda #ROW_END 
        sbc #ROW_START
        adc #8
        asl
        asl
        asl
        tax        
        ldy #$00
-
        lda #$00
        sta REG_LINES_XSCR_HI,y
        sta REG_LINES_L1_XSCR,y
        iny
        dex
        bne -

        lda $90                 ; install VBL irq
        sta $033d
        lda $90+1
        sta $033d+1
        lda #0
        sta $033c
        sei
        lda #<newirq
        sta $90
        lda #>newirq
        sta $90+1
        cli


WAIT_KEY
        jsr $FFE4               ; Calling KERNAL GETIN 
        beq WAIT_KEY
        cmp #$20                ; space to exit else restart
        bne WAIT_KEY

exit:    
        lda #$03                ; Petfont + bitmap + no sprites
        sta REG_LAYERS_CFG
        lda #$00                ; Reset tile config
        sta REG_TILES_CFG 

        ldy #$00
        lda #$00
restore:        
        sta REG_LINES_XSCR_HI,y
        sta REG_LINES_L1_XSCR,y
        iny
        bne restore

restore_int:
        sei
        lda $033d
        sta $90
        lda $033d+1
        sta $90+1
        cli
        rts




;-------------------------------------------------------------
;  move the wave
newirq
        lda spos
        sta cpos
        adc #$2
        sta spos

        lda #ROW_END 
        sbc #ROW_START
        adc #8        
        asl
        asl
        asl
        tax
        ldy #$00
-
        txa
        sta temp
        lda cpos
        tax
        lda sine,x
        lsr
        lsr
        lsr
        ;sbc #16
        sta REG_LINES_L1_XSCR,y
        iny
        inc cpos
        lda temp
        tax
        dex
        bne -

        jmp ($033d)


spos
!byte $00
cpos
!byte $00
temp
!byte $00

sine
!byte $80, $83, $86, $89, $8C, $90, $93, $96
!byte $99, $9C, $9F, $A2, $A5, $A8, $AB, $AE
!byte $B1, $B3, $B6, $B9, $BC, $BF, $C1, $C4
!byte $C7, $C9, $CC, $CE, $D1, $D3, $D5, $D8
!byte $DA, $DC, $DE, $E0, $E2, $E4, $E6, $E8
!byte $EA, $EB, $ED, $EF, $F0, $F1, $F3, $F4
!byte $F5, $F6, $F8, $F9, $FA, $FA, $FB, $FC
!byte $FD, $FD, $FE, $FE, $FE, $FF, $FF, $FF
!byte $FF, $FF, $FF, $FF, $FE, $FE, $FE, $FD
!byte $FD, $FC, $FB, $FA, $FA, $F9, $F8, $F6
!byte $F5, $F4, $F3, $F1, $F0, $EF, $ED, $EB
!byte $EA, $E8, $E6, $E4, $E2, $E0, $DE, $DC
!byte $DA, $D8, $D5, $D3, $D1, $CE, $CC, $C9
!byte $C7, $C4, $C1, $BF, $BC, $B9, $B6, $B3
!byte $B1, $AE, $AB, $A8, $A5, $A2, $9F, $9C
!byte $99, $96, $93, $90, $8C, $89, $86, $83
!byte $80, $7D, $7A, $77, $74, $70, $6D, $6A
!byte $67, $64, $61, $5E, $5B, $58, $55, $52
!byte $4F, $4D, $4A, $47, $44, $41, $3F, $3C
!byte $39, $37, $34, $32, $2F, $2D, $2B, $28
!byte $26, $24, $22, $20, $1E, $1C, $1A, $18
!byte $16, $15, $13, $11, $10, $0F, $0D, $0C
!byte $0B, $0A, $08, $07, $06, $06, $05, $04
!byte $03, $03, $02, $02, $02, $01, $01, $01
!byte $01, $01, $01, $01, $02, $02, $02, $03
!byte $03, $04, $05, $06, $06, $07, $08, $0A
!byte $0B, $0C, $0D, $0F, $10, $11, $13, $15
!byte $16, $18, $1A, $1C, $1E, $20, $22, $24
!byte $26, $28, $2B, $2D, $2F, $32, $34, $37
!byte $39, $3C, $3F, $41, $44, $47, $4A, $4D
!byte $4F, $52, $55, $58, $5B, $5E, $61, $64
!byte $67, $6A, $6D, $70, $74, $77, $7A, $7D

